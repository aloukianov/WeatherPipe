// This requires the C library for NETCDF version
// The library can be found here:
// https://www.unidata.ucar.edu/software/thredds/current/netcdf-java/reference/netcdf4Clibrary.html

apply plugin: 'application'
mainClassName = "edu.purdue.cs307.team16.WeatherPipe"

repositories {
    mavenCentral()
}

dependencies {

   compile 'commons-cli:commons-cli:1.3'
   compile 'com.amazonaws:aws-java-sdk:1.10.30'
   compile 'joda-time:joda-time:2.8.2'
   compile 'commons-io:commons-io:2.4'
   compile 'org.json:json:20150729'
   compile 'junit:junit:4.12'

   testCompile 'commons-cli:commons-cli:1.3'
   testCompile 'com.amazonaws:aws-java-sdk:1.10.30'
   testCompile 'joda-time:joda-time:2.8.2'
   testCompile 'commons-io:commons-io:2.4'
   testCompile 'org.json:json:20150729'
   testCompile 'junit:junit:4.12'
   

}
sourceSets {
    test {
        java {
            srcDirs = ["src/main/java/edu/purdue/cs307/team16/test/"] 
        }
    }
}

test {
  // enable TestNG support (default is JUnit)
  useTestNG()

  // listen to events in the test execution lifecycle
  beforeTest { descriptor ->
     logger.lifecycle("Running test: " + descriptor)
  }

  // listen to standard out and standard error of the test JVM(s)
  onOutput { descriptor, event ->
     logger.lifecycle("Test: " + descriptor + " produced standard out/err: " + event.message )
  }
    testLogging {
        // Show that tests are run in the command-line output
        events 'started', 'passed'
  }

}


apply plugin: 'eclipse'

