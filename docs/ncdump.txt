netcdf /Users/lalavaishnode/Downloads/decompressed.netcdf {
  dimensions:
    scanR_HI = 4;
    gateR_HI = 1832;
    radialR_HI = 720;
    scanR = 3;
    gateR = 334;
    radialR = 360;
    scanV_HI = 2;
    gateV_HI = 1192;
    radialV_HI = 720;
    scanV = 3;
    gateV = 912;
    radialV = 360;
  variables:
    byte Reflectivity_HI(scanR_HI=4, radialR_HI=720, gateR_HI=1832);
      :units = "dBz";
      :long_name = "Reflectivity_HI";
      :missing_value = 1B, 0B; // byte
      :signal_below_threshold = 0B; // byte
      :scale_factor = 0.5f; // float
      :add_offset = -33.0f; // float
      :_Unsigned = "true";
      :SNR_threshold = 4S; // short
      :range_folding_threshold = 50S; // short
      :_CoordinateAxes = "timeR_HI elevationR_HI azimuthR_HI distanceR_HI";

    int timeR_HI(scanR_HI=4, radialR_HI=720);
      :long_name = "time of each ray";
      :units = "msecs since 2010-01-01T00:00:00Z";
      :missing_value = -9999; // int
      :_CoordinateAxisType = "Time";

    float elevationR_HI(scanR_HI=4, radialR_HI=720);
      :units = "degrees";
      :long_name = "elevation angle in degres: 0 = parallel to pedestal base, 90 = perpendicular";
      :missing_value = NaNf; // float
      :_CoordinateAxisType = "RadialElevation";

    float azimuthR_HI(scanR_HI=4, radialR_HI=720);
      :units = "degrees";
      :long_name = "azimuth angle in degrees: 0 = true north, 90 = east";
      :missing_value = NaNf; // float
      :_CoordinateAxisType = "RadialAzimuth";

    float distanceR_HI(gateR_HI=1832);
      :units = "m";
      :long_name = "radial distance to start of gate";
      :_CoordinateAxisType = "RadialDistance";

    int numRadialsR_HI(scanR_HI=4);
      :long_name = "number of valid radials in this scan";

    int numGatesR_HI(scanR_HI=4);
      :long_name = "number of valid gates in this scan";

    byte Reflectivity(scanR=3, radialR=360, gateR=334);
      :units = "dBz";
      :long_name = "Reflectivity";
      :missing_value = 1B, 0B; // byte
      :signal_below_threshold = 0B; // byte
      :scale_factor = 0.5f; // float
      :add_offset = -33.0f; // float
      :_Unsigned = "true";
      :range_folding_threshold = 50S; // short
      :_CoordinateAxes = "timeR elevationR azimuthR distanceR";

    int timeR(scanR=3, radialR=360);
      :long_name = "time of each ray";
      :units = "msecs since 2010-01-01T00:00:00Z";
      :missing_value = -9999; // int
      :_CoordinateAxisType = "Time";

    float elevationR(scanR=3, radialR=360);
      :units = "degrees";
      :long_name = "elevation angle in degres: 0 = parallel to pedestal base, 90 = perpendicular";
      :missing_value = NaNf; // float
      :_CoordinateAxisType = "RadialElevation";

    float azimuthR(scanR=3, radialR=360);
      :units = "degrees";
      :long_name = "azimuth angle in degrees: 0 = true north, 90 = east";
      :missing_value = NaNf; // float
      :_CoordinateAxisType = "RadialAzimuth";

    float distanceR(gateR=334);
      :units = "m";
      :long_name = "radial distance to start of gate";
      :_CoordinateAxisType = "RadialDistance";

    int numRadialsR(scanR=3);
      :long_name = "number of valid radials in this scan";

    int numGatesR(scanR=3);
      :long_name = "number of valid gates in this scan";

    byte RadialVelocity_HI(scanV_HI=2, radialV_HI=720, gateV_HI=1192);
      :units = "m/s";
      :long_name = "Radial Velocity_HI";
      :missing_value = 1B, 0B; // byte
      :signal_below_threshold = 0B; // byte
      :scale_factor = 0.5f; // float
      :add_offset = -64.5f; // float
      :_Unsigned = "true";
      :SNR_threshold = 4S; // short
      :range_folding_threshold = 50S; // short
      :_CoordinateAxes = "timeV_HI elevationV_HI azimuthV_HI distanceV_HI";

    int timeV_HI(scanV_HI=2, radialV_HI=720);
      :long_name = "time of each ray";
      :units = "msecs since 2010-01-01T00:00:00Z";
      :missing_value = -9999; // int
      :_CoordinateAxisType = "Time";

    float elevationV_HI(scanV_HI=2, radialV_HI=720);
      :units = "degrees";
      :long_name = "elevation angle in degres: 0 = parallel to pedestal base, 90 = perpendicular";
      :missing_value = NaNf; // float
      :_CoordinateAxisType = "RadialElevation";

    float azimuthV_HI(scanV_HI=2, radialV_HI=720);
      :units = "degrees";
      :long_name = "azimuth angle in degrees: 0 = true north, 90 = east";
      :missing_value = NaNf; // float
      :_CoordinateAxisType = "RadialAzimuth";

    float distanceV_HI(gateV_HI=1192);
      :units = "m";
      :long_name = "radial distance to start of gate";
      :_CoordinateAxisType = "RadialDistance";

    int numRadialsV_HI(scanV_HI=2);
      :long_name = "number of valid radials in this scan";

    int numGatesV_HI(scanV_HI=2);
      :long_name = "number of valid gates in this scan";

    byte RadialVelocity(scanV=3, radialV=360, gateV=912);
      :units = "m/s";
      :long_name = "Radial Velocity";
      :missing_value = 1B, 0B; // byte
      :signal_below_threshold = 0B; // byte
      :scale_factor = 0.5f; // float
      :add_offset = -64.5f; // float
      :_Unsigned = "true";
      :range_folding_threshold = 50S; // short
      :_CoordinateAxes = "timeV elevationV azimuthV distanceV";

    int timeV(scanV=3, radialV=360);
      :long_name = "time of each ray";
      :units = "msecs since 2010-01-01T00:00:00Z";
      :missing_value = -9999; // int
      :_CoordinateAxisType = "Time";

    float elevationV(scanV=3, radialV=360);
      :units = "degrees";
      :long_name = "elevation angle in degres: 0 = parallel to pedestal base, 90 = perpendicular";
      :missing_value = NaNf; // float
      :_CoordinateAxisType = "RadialElevation";

    float azimuthV(scanV=3, radialV=360);
      :units = "degrees";
      :long_name = "azimuth angle in degrees: 0 = true north, 90 = east";
      :missing_value = NaNf; // float
      :_CoordinateAxisType = "RadialAzimuth";

    float distanceV(gateV=912);
      :units = "m";
      :long_name = "radial distance to start of gate";
      :_CoordinateAxisType = "RadialDistance";

    int numRadialsV(scanV=3);
      :long_name = "number of valid radials in this scan";

    int numGatesV(scanV=3);
      :long_name = "number of valid gates in this scan";

    byte SpectrumWidth_HI(scanV_HI=2, radialV_HI=720, gateV_HI=1192);
      :units = "m/s";
      :long_name = "Radial Spectrum_HI";
      :missing_value = 1B, 0B; // byte
      :signal_below_threshold = 0B; // byte
      :scale_factor = 0.5f; // float
      :add_offset = -64.5f; // float
      :_Unsigned = "true";
      :SNR_threshold = 4S; // short
      :range_folding_threshold = 50S; // short
      :_CoordinateAxes = "timeV_HI elevationV_HI azimuthV_HI distanceV_HI";

    byte SpectrumWidth(scanV=3, radialV=360, gateV=912);
      :units = "m/s";
      :long_name = "Radial Spectrum";
      :missing_value = 1B, 0B; // byte
      :signal_below_threshold = 0B; // byte
      :scale_factor = 0.5f; // float
      :add_offset = -64.5f; // float
      :_Unsigned = "true";
      :SNR_threshold = 4S; // short
      :range_folding_threshold = 50S; // short
      :_CoordinateAxes = "timeV elevationV azimuthV distanceV";

  // global attributes:
  :Station = "KABR";
  :StationName = "Aberdeen,SD,US";
  :StationLatitude = 45.45583333333334; // double
  :StationLongitude = -98.41305555555556; // double
  :StationElevationInMeters = 397.0; // double
  :geospatial_lat_min = 43.38634387369407; // double
  :geospatial_lat_max = 47.52532279297261; // double
  :geospatial_lon_min = -101.36332043163165; // double
  :geospatial_lon_max = -95.46279067947947; // double
  :Conventions = "_Coordinates";
  :format = "AR2V0003";
  :cdm_data_type = "RADIAL";
  :base_date = "2010-01-01";
  :time_coverage_start = "2010-01-01T01:03:31Z";
  :time_coverage_end = "2010-01-01T01:12:53Z";
  :history = "Direct read of Nexrad Level 2 file into CDM";
  :DataType = "Radial";
  :Title = "Nexrad Level 2 Station KABR from 2010-01-01T01:03:29Z to 2010-01-01T01:12:53Z";
  :Summary = "Weather Surveillance Radar-1988 Doppler (WSR-88D) Level II data are the three meteorological base data quantities: reflectivity, mean radial velocity, and spectrum width.";
  :keywords = "WSR-88D; NEXRAD; Radar Level II; reflectivity; mean radial velocity; spectrum width";
  :VolumeCoveragePatternName = "7 elevation scans every 10 mins";
  :VolumeCoveragePattern = 32; // int
  :HorizontalBeamWidthInDegrees = 1.5; // double
}
